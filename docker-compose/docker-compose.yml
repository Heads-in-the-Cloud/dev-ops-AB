version: '3'

networks:
  api-net:
  db-net:

volumes:
  db-volume:
secrets:
  db-user:
    file: ./secrets/mysql_username.txt
  db-password:
    file: ./secrets/mysql_password.txt
  db-root-password:
    file: ./secrets/mysql_root_password.txt

services:
  db:
    image: $MYSQL_IMAGE
    volumes:
      - db-volume:/var/lib/mysql
      - ../mysql_startup_scripts:/docker-entrypoint-initdb.d
    environment:
      MYSQL_USER_FILE: /run/secrets/db-user
      MYSQL_PASSWORD_FILE: /run/secrets/db-password
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db-root-password
    networks:
      - db-net
    secrets:
      - db-user
      - db-password
      - db-root-password
    ports:
      - 3306:3306

  data-producer:
    image: $DATA_PRODUCER_IMAGE
    build: ../../data-producer
    depends_on:
       - flights-spring-api
       - users-spring-api
       - bookings-spring-api
    environment:
      USERS_API_URL: http://users-spring-api:8080
      FLIGHTS_API_URL: http://flights-spring-api:8080
      BOOKINGS_API_URL: http://bookings-spring-api:8080
    networks:
      - api-net
    ports:
      - 5000:5000

  flights-spring-api:
    image: $FLIGHTS_SPRING_API_IMAGE
    depends_on:
       - db
    environment:
      spring.datasource.url: jdbc:mysql://db:3306/utopia
    secrets:
      - db-user
      - db-password
    networks:
      - api-net
      - db-net
    ports:
      - 8080:8080

  users-spring-api:
    image: $USERS_SPRING_API_IMAGE
    depends_on:
       - db
    environment:
      spring.datasource.url: jdbc:mysql://db:3306/utopia
    secrets:
      - db-user
      - db-password
    networks:
      - api-net
      - db-net
    ports:
      - 8090:8080

  bookings-spring-api:
    image: $BOOKINGS_SPRING_API_IMAGE
    build: ../../spring-apis/bookings-api
    depends_on:
       - db
    environment:
      spring.datasource.url: jdbc:mysql://db:3306/utopia
    secrets:
      - db-user
      - db-password
    networks:
      - api-net
      - db-net
    ports:
      - 8100:8080

