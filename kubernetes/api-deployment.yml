apiVersion: apps/v1
kind: Deployment
metadata:
  name: reverse-proxy
  namespace: $ENV
  labels:
    app: reverse-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reverse-proxy
  template:
    metadata:
      labels:
        app: reverse-proxy
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
      containers:
      - name: flights-microservice
        image: $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$PROJECT_ID-flights-microservice:latest
        imagePullPolicy: Always
        env:
          - name: DOMAIN
            value: $DOMAIN
          - name: FLIGHTS
            value: flights-microservice
          - name: BOOKINGS
            value: bookings-microservice
          - name: USERS
            value: users-microservice
        ports:
          - containerPort: 80
          - nodePort: 80

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: flights-deployment
  namespace: $ENV
  labels:
    app: flights-microservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flights-microservice
  template:
    metadata:
      labels:
        app: flights-microservice
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
      containers:
      - name: flights-microservice
        image: $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$PROJECT_ID-flights-microservice:latest
        imagePullPolicy: Always
        env:
          - name: DB_URL
            valueFrom:
              secretKeyRef:
                key: db-url
                name: db-info
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: db-user
                name: db-info
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: db-password
                name: db-info
          - name: JWT_SECRET
            valueFrom:
              secretKeyRef:
                key: jwt-secret
                name: jwt-secret
        ports:
          - containerPort: 8080

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: bookings-deployment
  namespace: $NAMESPACE
  labels:
    app: bookings-microservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bookings-microservice
  template:
    metadata:
      labels:
        app: bookings-microservice
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
      containers:
      - name: bookings-microservice
        image: $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/ab-bookings-microservice:latest
        imagePullPolicy: Always
        env:
          - name: DB_URL
            valueFrom:
              secretKeyRef:
                key: db-url
                name: db-info
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: db-user
                name: db-info
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: db-password
                name: db-info
          - name: JWT_SECRET
            valueFrom:
              secretKeyRef:
                key: jwt-secret
                name: jwt-secret
        ports:
          - containerPort: 8080

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: users-deployment
  namespace: $ENV
  labels:
    app: users-microservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: users-microservice
  template:
    metadata:
      labels:
        app: users-microservice
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
      containers:
      - name: users-microservice
        image: $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/ab-users-microservice:latest
        imagePullPolicy: Always
        env:
          - name: DB_URL
            valueFrom:
              secretKeyRef:
                key: db-url
                name: db-info
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: db-user
                name: db-info
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: db-password
                name: db-info
          - name: JWT_SECRET
            valueFrom:
              secretKeyRef:
                key: jwt-secret
                name: jwt-secret
        ports:
          - containerPort: 8080
