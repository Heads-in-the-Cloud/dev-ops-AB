apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
spec:
  selector:
    matchLabels:
      run: db
  replicas: 1
  template:
    metadata:
      labels:
        run: db
    spec:
      volumes:
        - name: db-data
        - name: db-entry
          hostPath:
            path: /home/sheep/work/utopia/devops/mysql_startup_scripts
        - name: db-user-creds
          secret:
            secretName: db-user-creds
            items:
              - key: db-user
                path: db-user
              - key: db-password
                path: db-password
        - name: db-root-password
          secret:
            secretName: db-root-password
            items:
              - key: db-root-password
                path: db-root-password

      containers:
      - name: db
        image: docker.io/library/mysql:8
        volumeMounts:
          - name: db-data
            mountPath: /var/lib/mysql
          - name: db-entry
            mountPath: /docker-entrypoint-initdb.d
          - name: db-user-creds
            readOnly: true
            mountPath: /run/secrets/db-user
            subPath: db-user
          - name: db-user-creds
            readOnly: true
            mountPath: /run/secrets/db-password
            subPath: db-password
          - name: db-root-password
            readOnly: true
            mountPath: /run/secrets/db-root-password
            subPath: db-root-password
        ports:
          - containerPort: 3306
        env:
          - name: MYSQL_DATABASE
            value: utopia
          - name: MYSQL_USER_FILE
            value: /run/secrets/db-user
          - name: MYSQL_PASSWORD_FILE
            value: /run/secrets/db-password
          - name: MYSQL_ROOT_PASSWORD_FILE
            value: /run/secrets/db-root-password

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: flights-spring-api
spec:
  selector:
    matchLabels:
      run: flights-spring-api
  replicas: 1
  template:
    metadata:
      labels:
        run: flights-spring-api
    spec:
      volumes:
        - name: db-user-creds
          secret:
            secretName: db-user-creds
      containers:
      - name: flights-spring-api
        image: docker.io/austinbaugh/utopia-flights-spring-api:0.0.2-SNAPSHOT
        volumeMounts:
          - name: db-user-creds
            readOnly: true
            mountPath: /run/secrets/db-user
            subPath: db-user
          - name: db-user-creds
            readOnly: true
            mountPath: /run/secrets/db-password
            subPath: db-password
        ports:
          - containerPort: 8080
        env:
          - name: spring.datasource.url
            value: jdbc:mysql://db:3306/utopia

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: bookings-spring-api
spec:
  selector:
    matchLabels:
      run: bookings-spring-api
  replicas: 1
  template:
    metadata:
      labels:
        run: bookings-spring-api
    spec:
      volumes:
        - name: db-user-creds
          secret:
            secretName: db-user-creds
      containers:
      - name: bookings-spring-api
        image: docker.io/austinbaugh/utopia-bookings-spring-api:0.0.2-SNAPSHOT
        volumeMounts:
          - name: db-user-creds
            readOnly: true
            mountPath: /run/secrets/db-user
            subPath: db-user
          - name: db-user-creds
            readOnly: true
            mountPath: /run/secrets/db-password
            subPath: db-password
        ports:
          - containerPort: 8080
        env:
          - name: spring.datasource.url
            value: jdbc:mysql://db:3306/utopia

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: users-spring-api
spec:
  selector:
    matchLabels:
      run: users-spring-api
  replicas: 1
  template:
    metadata:
      labels:
        run: users-spring-api
    spec:
      volumes:
        - name: db-user-creds
          secret:
            secretName: db-user-creds
      containers:
      - name: users-spring-api
        image: docker.io/austinbaugh/utopia-users-spring-api:0.0.2-SNAPSHOT
        volumeMounts:
          - name: db-user-creds
            readOnly: true
            mountPath: /run/secrets/db-user
            subPath: db-user
          - name: db-user-creds
            readOnly: true
            mountPath: /run/secrets/db-password
            subPath: db-password
        ports:
          - containerPort: 8080
        env:
          - name: spring.datasource.url
            value: jdbc:mysql://db:3306/utopia

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-producer
spec:
  selector:
    matchLabels:
      run: data-producer
  replicas: 1
  template:
    metadata:
      labels:
        run: data-producer
    spec:
      containers:
      - name: data-producer
        image: docker.io/austinbaugh/utopia-data-producer:0.0.2-SNAPSHOT
        ports:
          - containerPort: 5000
        env:
          - name: USERS_API_URL
            value: http://users-spring-api:8080 
          - name: FLIGHTS_API_URL
            value: http://flights-spring-api:8080 
          - name: BOOKINGS_API_URL
            value: http://bookings-spring-api:8080

