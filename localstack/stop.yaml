---
- hosts: managed_node

  vars:

    project_id: AB-utopia
    containers:
      - reverse-proxy
      - bookings-microservice
      - flights-microservice
      - users-microservice
    tmp_dir: /tmp
    mock_access_key: local
    mock_secret_key: local
    localstack_endpoint: http://localhost:4566
    s3_bucket: ab-utopia

  tasks:

# ---------------------------------------------------------------------------- #
#                                Use virtualenv                                #
# ---------------------------------------------------------------------------- #

  - name: Get python3 path
    shell: which python3
    register: python3

  - name: Change python interpreter to use virtualenv
    set_fact:
      ansible_python_interpreter: "{{ tmp_dir }}/venv/bin/pyvenv"

  - name: Assert we are in a virtualenv
    shell: echo $VIRTUAL_ENV
    register: command_result
    failed_when: command_result.stdout == ""

# ---------------------------------------------------------------------------- #
#                           Delete storage resources                           #
# ---------------------------------------------------------------------------- #

  - name: Delete S3 bucket for Terraform state file
    amazon.aws.s3_bucket:
      name: "{{ project_id | lower }}"
      aws_access_key: "{{ mock_access_key }}"
      aws_secret_key: "{{ mock_secret_key }}"
      s3_url: "{{ localstack_endpoint }}"
      state: absent

  - name: Delete ECR repositories
    community.aws.ecs_ecr:
      name: "{{ project_id | lower }}-{{ item }}"
      aws_access_key: "{{ mock_access_key }}"
      aws_secret_key: "{{ mock_secret_key }}"
      ec2_url: "{{ localstack_endpoint }}"
      state: absent
    with_items: "{{ containers }}"

  - name: Delete secret string with Key/Value items
    community.aws.aws_secret:
      name: "dev/{{ project_id }}/default"
      aws_access_key: "{{ mock_access_key }}"
      aws_secret_key: "{{ mock_secret_key }}"
      ec2_url: "{{ localstack_endpoint }}"
      state: absent

# ---------------------------------------------------------------------------- #
#                                Stop Localstack                               #
# ---------------------------------------------------------------------------- #

  - name: Stop Localstack
    shell: |
      localstack stop

  - name: Go back to original python interpreter
    set_fact:
      ansible_python_interpreter: "{{ python3.stdout }}"

  - name: Stop HTTP proxy for Localstack dashboard
    containers.podman.podman_container:
      name: nginx
      state: absent
    delegate_to: localhost
